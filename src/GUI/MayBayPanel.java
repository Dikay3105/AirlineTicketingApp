/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BUS.GheBUS;
import BUS.ImportExcel;
import BUS.MayBayBUS;
import DAO.MayBayDAO;
import DTO.MayBayDTO;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

public class MayBayPanel extends javax.swing.JPanel {

    MayBayDAO dao = new MayBayDAO();

    public MayBayPanel() {
        initComponents();
        fillTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        cboHangBay = new javax.swing.JComboBox<>();
        txtMaMB = new javax.swing.JTextField();
        cboKichThuoc = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMayBay = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DANH MỤC MÁY BAY", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jButton1.setBackground(new java.awt.Color(0, 204, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Thêm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 204, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Xuất File");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 204, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Chọn File");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        cboHangBay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hãng bay", "Vietnam Airlines", "Vietjet Air", "Jetstar Pacific Airlines", "Bamboo", "Jetstar Pacific" }));

        txtMaMB.setText("Mã máy bay...");
        txtMaMB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMaMBFocusGained(evt);
            }
        });
        txtMaMB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaMBActionPerformed(evt);
            }
        });

        cboKichThuoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kích thước", "Lớn", "Nhỏ", "Vừa" }));

        jButton4.setBackground(new java.awt.Color(0, 204, 255));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Tìm Kiếm");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 204, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Làm Mới");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaMB, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cboKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(cboHangBay, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(113, 113, 113)
                        .addComponent(jButton3)))
                .addGap(71, 71, 71)
                .addComponent(jButton4)
                .addGap(60, 60, 60)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMaMB, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboHangBay, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "THÔNG TIN MÁY BAY", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        tblMayBay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã Máy bay", "Kích thước", "Hãng bay", "CauTrucBus", "CauTrucEco", "SLBussiness", "SLEconomy"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMayBay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMayBayMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMayBay);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1059, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            ThemMayBay them = new ThemMayBay();
            them.setLocationRelativeTo(this);
            them.setVisible(true);
            // Sau khi thêm máy bay, cập nhật lại bảng dữ liệu
            fillTable();
        } catch (SQLException ex) {
            Logger.getLogger(MayBayPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn đường dẫn và tên file lưu");

        // Thiết lập bộ lọc cho file Excel
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files", "xlsx");
        fileChooser.setFileFilter(filter);

        int userSelection = fileChooser.showSaveDialog(null);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            // Lấy đường dẫn và tên file được chọn bởi người dùng
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();

            // Kiểm tra nếu tệp đã tồn tại
            if (new File(filePath).exists()) {
                int option = JOptionPane.showConfirmDialog(null, "Tệp đã tồn tại. Bạn có muốn ghi đè lên nó?", "Xác nhận ghi đè", JOptionPane.YES_NO_OPTION);
                if (option != JOptionPane.YES_OPTION) {
                    return; // Người dùng không muốn ghi đè, thoát khỏi phương thức
                }
            }
            JOptionPane.showMessageDialog(null, MayBayBUS.xuatExcel(filePath + ".xlsx"), "Thông báo", 1);
            try {
                Desktop.getDesktop().open(new File(MayBayBUS.pathExcel));
            } catch (IOException ex) {
                Logger.getLogger(PanelVeBay.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    public void resetForm() {
        txtMaMB.setText("Mã máy bay...");
        cboKichThuoc.setSelectedIndex(0);
        cboHangBay.setSelectedIndex(0);
    }
    private void tblMayBayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMayBayMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1 && evt.getClickCount() == 2) {
            int selectedRow = tblMayBay.getSelectedRow();
            String maMayBay = tblMayBay.getValueAt(selectedRow, 1).toString();
            String kichThuoc = tblMayBay.getValueAt(selectedRow, 2).toString();
            String hangBay = tblMayBay.getValueAt(selectedRow, 3).toString();
            String cauTrucBus = tblMayBay.getValueAt(selectedRow, 4).toString();
            String cauTrucEco = tblMayBay.getValueAt(selectedRow, 5).toString();
            int slBusiness = Integer.parseInt(tblMayBay.getValueAt(selectedRow, 6).toString());
            int slEconomy = Integer.parseInt(tblMayBay.getValueAt(selectedRow, 7).toString());
            try {
                InfoMayBay infoMayBay = new InfoMayBay(maMayBay, kichThuoc, hangBay, cauTrucBus, cauTrucEco, slBusiness, slEconomy);
                infoMayBay.setLocationRelativeTo(this); // Đặt vị trí của cửa sổ thông tin máy bay tương đối với MayBayPanel
                infoMayBay.setVisible(true);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }

    }//GEN-LAST:event_tblMayBayMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn đường dẫn và tên file lưu");

        // Thiết lập bộ lọc cho file Excel
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files", "xlsx");
        fileChooser.setFileFilter(filter);

        int userSelection = fileChooser.showSaveDialog(null);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            // Lấy đường dẫn và tên file được chọn bởi người dùng
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();

            new ImportExcel().ImportExcel_MayBay(filePath);
            fillTable();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtMaMBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaMBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaMBActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
//    String selectedSize = cboKichThuoc.getSelectedItem().toString();
//String selectedAirline = cboHangBay.getSelectedItem().toString();
//String maMB = txtMaMB.getText().trim();
//
//if (maMB.isEmpty() && selectedSize.equals("Kích thước") && selectedAirline.equals("Hãng bay")) {
//    JOptionPane.showMessageDialog(this, "Vui lòng chọn tiêu chí tìm kiếm.");
//} else {
//    List<MayBayDTO> result = new ArrayList<>();
//
//    if (!maMB.isEmpty()) {
//        MayBayDTO mb = dao.findByID(maMB);
//        if (mb != null) {
//            result.add(mb);
//        }
//    } else {
//         if (!selectedSize.equals("Kích thước") && !selectedAirline.equals("Hãng bay")) {
//        // Tìm kiếm theo cả hãng bay và kích thước
//        result = dao.findByAirlineAndSize(selectedAirline, selectedSize);
//        }
//         else if (!selectedSize.equals("Kích thước")) {
//            // Tìm kiếm theo kích thước
//            result = dao.findBySize(selectedSize);
//        } else if (!selectedAirline.equals("Hãng bay")) {
//            // Tìm kiếm theo hãng bay
//            result = dao.findByAirline(selectedAirline);
//        }
//    }
//
//    if (!result.isEmpty()) {
//        DefaultTableModel model = (DefaultTableModel) tblMayBay.getModel();
//        model.setRowCount(0); // Clear table before adding search result
//        for (MayBayDTO mb : result) {
//            Object[] data = new Object[8];
//            data[0] = 1;
//            data[1] = mb.getMaMayBay();
//            data[2] = mb.getKichThuoc();
//            data[3] = mb.getHangBay();
//            data[4] = mb.getCautrucBus();
//            data[5] = mb.getCautrucEco();
//            data[6] = mb.getSLbus();
//            data[7] = mb.getSLeco();
//            model.addRow(data);
//        }
//    } else {
//        JOptionPane.showMessageDialog(this, "Không tìm thấy máy bay phù hợp.");
//    }
//}

        String selectedSize = cboKichThuoc.getSelectedItem().toString();
        String selectedAirline = cboHangBay.getSelectedItem().toString();
        String maMB = txtMaMB.getText().trim();

        if (maMB.isEmpty() && selectedSize.equals("Kích thước") && selectedAirline.equals("Hãng bay")) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn tiêu chí tìm kiếm.");
        } else {
            List<MayBayDTO> result = new ArrayList<>();

            if (!selectedSize.equals("Kích thước") && !selectedAirline.equals("Hãng bay")) {
                // Tìm kiếm theo cả hãng bay và kích thước
                result = dao.findByAirlineAndSize(selectedAirline, selectedSize);
            } else if (!selectedSize.equals("Kích thước")) {
                // Tìm kiếm theo kích thước
                result = dao.findBySize(selectedSize);
            } else if (!selectedAirline.equals("Hãng bay")) {
                // Tìm kiếm theo hãng bay
                result = dao.findByAirline(selectedAirline);
            } else if (!maMB.isEmpty()) {
                // Tìm kiếm theo mã máy bay nếu không có lựa chọn kích thước và hãng bay
                MayBayDTO mb = dao.findByID(maMB);
                if (mb != null) {
                    result.add(mb);
                }
            }

            if (!result.isEmpty()) {
                DefaultTableModel model = (DefaultTableModel) tblMayBay.getModel();
                model.setRowCount(0); // Clear table before adding search result
                for (MayBayDTO mb : result) {
                    Object[] data = new Object[8];
                    data[0] = 1;
                    data[1] = mb.getMaMayBay();
                    data[2] = mb.getKichThuoc();
                    data[3] = mb.getHangBay();
                    data[4] = mb.getCautrucBus();
                    data[5] = mb.getCautrucEco();
                    data[6] = mb.getSLbus();
                    data[7] = mb.getSLeco();
                    model.addRow(data);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy máy bay phù hợp.");
            }
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtMaMBFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaMBFocusGained
        txtMaMB.setText("");
        txtMaMB.setForeground(new Color(51, 51, 51));
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaMBFocusGained

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        resetForm();
        fillTable();
    }//GEN-LAST:event_jButton5ActionPerformed

    // Hiển thị thông tin của đối tượng MayBayDTO lên form
    public MayBayDTO getModel() {
        MayBayDTO mb = new MayBayDTO();
        mb.setMaMayBay(txtMaMB.getText());
        mb.setHangBay(cboHangBay.getSelectedItem().toString());
        mb.setKichThuoc(cboKichThuoc.getSelectedItem().toString());
        mb.setCautrucBus("0");
        mb.setCautrucEco("0");
        mb.setSLbus(0);
        mb.setSLeco(0);
        mb.setXuLy(1);
        return mb;
    }

    public void setModel(MayBayDTO mb) {
        txtMaMB.setText(mb.getMaMayBay());
        cboHangBay.setSelectedItem(mb.getHangBay());
        cboKichThuoc.setSelectedItem(mb.getKichThuoc());
    }

    public void fillTable() {
        DefaultTableModel tblmodel = (DefaultTableModel) tblMayBay.getModel();
        tblmodel.setRowCount(0);
        int stt = 1;
        for (MayBayDTO mb : dao.getALL()) {
            Object data[] = new Object[8];
            data[0] = stt++;
            data[1] = mb.getMaMayBay();
            data[2] = mb.getKichThuoc();
            data[3] = mb.getHangBay();
            data[4] = mb.getCautrucBus();
            data[5] = mb.getCautrucEco();
            data[6] = mb.getSLbus();
            data[7] = mb.getSLeco();
            tblmodel.addRow(data);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboHangBay;
    private javax.swing.JComboBox<String> cboKichThuoc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tblMayBay;
    private javax.swing.JTextField txtMaMB;
    // End of variables declaration//GEN-END:variables

    public class InfoMayBay extends JFrame {

        private Font sgUI15b;

        private JLabel lbMaMB, lbKichThuoc, lbHangBay, lbCauTrucBus, lbCauTrucEco, lbSLBusiness, lbSLEconomy;
        private JTextField jtfMaMB, jtfKichThuoc, jtfHangBay, jtfCauTrucBus, jtfCauTrucEco, jtfSLBusiness, jtfSLEconomy;

        public InfoMayBay(String maMayBay, String kichThuoc, String hangBay, String cauTrucBus, String cauTrucEco, int slBusiness, int slEconomy) {
            sgUI15b = new Font("Segoe UI", Font.BOLD, 15);
            initComponents(); // Khởi tạo giao diện
            // Cập nhật thông tin máy bay
            jtfMaMB.setText(maMayBay);
            jtfKichThuoc.setText(kichThuoc);
            jtfHangBay.setText(hangBay);
            jtfCauTrucBus.setText(cauTrucBus);
            jtfCauTrucEco.setText(cauTrucEco);
            jtfSLBusiness.setText(String.valueOf(slBusiness));
            jtfSLEconomy.setText(String.valueOf(slEconomy));
        }

        // Hàm khởi tạo giao diện
        private void initComponents() {
            setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            setResizable(false);

            JPanel pnContent = new JPanel(new GridBagLayout());
            GridBagConstraints gbc = new GridBagConstraints();
            pnContent.setBackground(Color.white);
            sgUI15b = new Font("Segoe UI", Font.BOLD, 15);

            lbMaMB = new JLabel("Mã Máy Bay:");
            lbMaMB.setFont(sgUI15b);
            gbc.gridx = 0;
            gbc.gridy = 0;
            gbc.insets = new Insets(10, 10, 10, 10);
            pnContent.add(lbMaMB, gbc);

            jtfMaMB = new JTextField(20);
            jtfMaMB.setFont(sgUI15b);
            jtfMaMB.setEditable(false); // Không cho phép chỉnh sửa
            jtfMaMB.setText(getName()); // Đặt giá trị mã máy bay vào trường văn bản

            lbKichThuoc = new JLabel("Kích Thước:");
            lbKichThuoc.setFont(sgUI15b);
            gbc.gridx = 0;
            gbc.gridy = 1;
            pnContent.add(lbKichThuoc, gbc);

            jtfKichThuoc = new JTextField(20);
            jtfKichThuoc.setFont(sgUI15b);
            gbc.gridx = 1;
            gbc.gridy = 1;
            pnContent.add(jtfKichThuoc, gbc);

            lbHangBay = new JLabel("Hãng Bay:");
            lbHangBay.setFont(sgUI15b);
            gbc.gridx = 0;
            gbc.gridy = 2;
            pnContent.add(lbHangBay, gbc);

            jtfHangBay = new JTextField(20);
            jtfHangBay.setFont(sgUI15b);
            gbc.gridx = 1;
            gbc.gridy = 2;
            pnContent.add(jtfHangBay, gbc);

            lbCauTrucBus = new JLabel("Cấu Trúc Business:");
            lbCauTrucBus.setFont(sgUI15b);
            gbc.gridx = 0;
            gbc.gridy = 3;
            pnContent.add(lbCauTrucBus, gbc);

            jtfCauTrucBus = new JTextField(20);
            jtfCauTrucBus.setFont(sgUI15b);
            gbc.gridx = 1;
            gbc.gridy = 3;
            pnContent.add(jtfCauTrucBus, gbc);

            lbCauTrucEco = new JLabel("Cấu Trúc Economy:");
            lbCauTrucEco.setFont(sgUI15b);
            gbc.gridx = 0;
            gbc.gridy = 4;
            pnContent.add(lbCauTrucEco, gbc);

            jtfCauTrucEco = new JTextField(20);
            jtfCauTrucEco.setFont(sgUI15b);
            gbc.gridx = 1;
            gbc.gridy = 4;
            pnContent.add(jtfCauTrucEco, gbc);

            lbSLBusiness = new JLabel("Số Lượng Business:");
            lbSLBusiness.setFont(sgUI15b);
            gbc.gridx = 0;
            gbc.gridy = 5;
            pnContent.add(lbSLBusiness, gbc);

            jtfSLBusiness = new JTextField(20);
            jtfSLBusiness.setFont(sgUI15b);
            gbc.gridx = 1;
            gbc.gridy = 5;
            pnContent.add(jtfSLBusiness, gbc);

            lbSLEconomy = new JLabel("Số Lượng Economy:");
            lbSLEconomy.setFont(sgUI15b);
            gbc.gridx = 0;
            gbc.gridy = 6;
            pnContent.add(lbSLEconomy, gbc);

            jtfSLEconomy = new JTextField(20);
            jtfSLEconomy.setFont(sgUI15b);
            gbc.gridx = 1;
            gbc.gridy = 6;
            pnContent.add(jtfSLEconomy, gbc);

            JButton jbDELETE = new JButton("Xóa");
            jbDELETE.setFont(sgUI15b);
            jbDELETE.setBackground(Color.decode("#388E3C"));
            jbDELETE.setForeground(Color.white);
            gbc.gridx = 0;
            gbc.gridy = 7;
            pnContent.add(jbDELETE, gbc);

            jtfMaMB = new JTextField(20);
            jtfMaMB.setFont(sgUI15b);
            jtfMaMB.setEditable(false); // Không cho phép chỉnh sửa
            jtfMaMB.addMouseListener(null); // Ngăn chặn sự kiện bấm chuột
            gbc.gridx = 1;
            gbc.gridy = 0;
            pnContent.add(jtfMaMB, gbc);

            jbDELETE.addActionListener(e -> {
                String maMayBay = jtfMaMB.getText(); // Get plane code from text field

                int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa không?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);

                if (confirm == JOptionPane.YES_OPTION) {
                    if(MayBayDAO.mbStillWork(maMayBay)) {
                        JOptionPane.showMessageDialog(this, "Máy bay này còn chuyến bay hoạt động");
                    }else {
                        MayBayDAO mayBayDAO = new MayBayDAO();
                    int result = 0;
                        try {
                            result = mayBayDAO.DelMayBay(maMayBay);
                        } catch (SQLException ex) {
                            Logger.getLogger(MayBayPanel.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    try {
                        GheBUS.DelAllGhe(maMayBay);// Call the method to delete the plane from the database
                    } catch (SQLException ex) {
                        Logger.getLogger(MayBayPanel.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ParseException ex) {
                        Logger.getLogger(MayBayPanel.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    if (result != -1) {
                        // Clear data in the fields if the deletion was successful
                        jtfMaMB.setText("");
                        jtfKichThuoc.setText("");
                        jtfHangBay.setText("");
                        jtfCauTrucBus.setText("");
                        jtfCauTrucEco.setText("");
                        jtfSLBusiness.setText("");
                        jtfSLEconomy.setText("");

                        // Close the current window
                        dispose();

                        // Reopen the window containing the data table
                        pack();
                    } else {
                        // Handle the error if necessary
                    }
                    }
                }
            });

            JButton jbCANCEL = new JButton("Thoát");
            jbCANCEL.setFont(sgUI15b);
            jbCANCEL.setBackground(Color.decode("#FF3D00"));
            jbCANCEL.setForeground(Color.white);
            jbCANCEL.addActionListener((e) -> {
                // Xử lý sự kiện thoát
                dispose();
            });
            gbc.gridx = 1;
            gbc.gridy = 7;
            pnContent.add(jbCANCEL, gbc);

            setContentPane(pnContent);
            pack();
            setVisible(true);
        }

    }
}
