/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.datve;

import BUS.ChuyenBayBUS;
import BUS.GiaChuyenBayBUS;
import DTO.ChuyenBayDTO;
import DTO.DuongBayDTO;
import DTO.GiaChuyenBayDTO;
import DTO.VeBayDTO;
import DTO.TimChuyenBayDTO;
import static GUI.datve.MenuDatVe.btn_DatVe;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;


/**
 *
 * @author ANH KHOA
 */
public class PanelChonChuyenBay extends javax.swing.JPanel {
    DefaultTableModel model;
    static String t, time;
    static String noiDi;
    static String noiDen;
    static String ngayDi;
    static String ngayVe;
    static String hangBaydi, hangBayve;
    private JTable table;
    public static ArrayList<ChuyenBayDTO> listChuyenBay = new ArrayList<>();
    boolean check2C=false;
    static boolean check;
    TimChuyenBayDTO tcb;
    /**
     * Creates new form PanelChonChuyenBay
     */
    public PanelChonChuyenBay(TimChuyenBayDTO TCB) throws ParseException {
//        System.out.println(""+TCB.getNgayve());
        btn_DatVe.setEnabled(true);
        tcb=TCB;
//        System.out.println(""+tcb.getNoidi()+tcb.getNoiden());
        initComponents();
        
        loadTable(tcb);
        init();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_title = new javax.swing.JPanel();
        lb_Chon = new javax.swing.JLabel();
        lb_TenChuyen = new javax.swing.JLabel();
        pn_Content = new javax.swing.JPanel();
        pn_function = new javax.swing.JPanel();
        pn_functionCenter = new javax.swing.JPanel();
        lb_CountChuyen = new javax.swing.JLabel();
        pn_functionnull = new javax.swing.JPanel();
        pn_table = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1000, 700));
        setLayout(new java.awt.BorderLayout());

        pn_title.setBackground(new java.awt.Color(248, 255, 235));
        pn_title.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 5, 0, 0, new java.awt.Color(248, 255, 235)));
        pn_title.setLayout(new java.awt.GridLayout(2, 1));

        lb_Chon.setBackground(new java.awt.Color(0, 204, 204));
        lb_Chon.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lb_Chon.setForeground(new java.awt.Color(0, 204, 204));
        lb_Chon.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lb_Chon.setText("Chọn chuyến bay");
        lb_Chon.setPreferredSize(new java.awt.Dimension(1000, 30));
        pn_title.add(lb_Chon);

        lb_TenChuyen.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lb_TenChuyen.setText("Chọn chuyến bay Hà Nội, Việt Nam - Tp. Hồ Chí Minh, Việt Nam");
        lb_TenChuyen.setPreferredSize(new java.awt.Dimension(1000, 30));
        pn_title.add(lb_TenChuyen);

        add(pn_title, java.awt.BorderLayout.NORTH);

        pn_Content.setBackground(new java.awt.Color(255, 255, 255));
        pn_Content.setLayout(new java.awt.BorderLayout());

        pn_function.setBackground(new java.awt.Color(255, 255, 255));
        pn_function.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 0, 0, 0, new java.awt.Color(0, 204, 204)));
        pn_function.setPreferredSize(new java.awt.Dimension(1000, 50));
        pn_function.setLayout(new java.awt.BorderLayout());

        pn_functionCenter.setBackground(new java.awt.Color(255, 255, 255));
        pn_functionCenter.setPreferredSize(new java.awt.Dimension(400, 50));
        pn_functionCenter.setLayout(new java.awt.BorderLayout());

        lb_CountChuyen.setBackground(new java.awt.Color(255, 255, 255));
        lb_CountChuyen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_CountChuyen.setText("? kết quả");
        lb_CountChuyen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(248, 255, 235), 10));
        lb_CountChuyen.setPreferredSize(new java.awt.Dimension(100, 50));
        pn_functionCenter.add(lb_CountChuyen, java.awt.BorderLayout.WEST);

        pn_functionnull.setBackground(new java.awt.Color(248, 255, 235));
        pn_functionnull.setPreferredSize(new java.awt.Dimension(300, 50));

        javax.swing.GroupLayout pn_functionnullLayout = new javax.swing.GroupLayout(pn_functionnull);
        pn_functionnull.setLayout(pn_functionnullLayout);
        pn_functionnullLayout.setHorizontalGroup(
            pn_functionnullLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 704, Short.MAX_VALUE)
        );
        pn_functionnullLayout.setVerticalGroup(
            pn_functionnullLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 47, Short.MAX_VALUE)
        );

        pn_functionCenter.add(pn_functionnull, java.awt.BorderLayout.CENTER);

        pn_function.add(pn_functionCenter, java.awt.BorderLayout.CENTER);

        pn_Content.add(pn_function, java.awt.BorderLayout.NORTH);

        pn_table.setBackground(new java.awt.Color(255, 255, 255));
        pn_table.setPreferredSize(new java.awt.Dimension(1000, 590));
        pn_table.setLayout(new java.awt.BorderLayout());

        table = new JTable(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        JScrollPane scrollPane = new JScrollPane();
        scrollPane.getViewport().add(table);
        pn_table.add(scrollPane,BorderLayout.CENTER);
        table.addMouseListener(new MouseAdapter() {
            String noidi, noiden;
            String ngaydi, ngayve;
            String giaPT,giaTG;
            String gioDi, gioDen, machuyenbay;
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getButton() == MouseEvent.BUTTON1 && e.getClickCount() == 2) {
                    int SelectRow = table.getSelectedRow();
                    for (int i = 0; i < 6; i++) {
                        // Lấy đối tượng TableColumnModel
                        TableColumnModel columnModel = table.getColumnModel();
                        // Lấy đối tượng TableColumn của cột thứ 1 (cột ID)
                        TableColumn column = columnModel.getColumn(i);
                        // Lấy giá trị của header của cột ID
                        Object headerValue = column.getHeaderValue();
                        if (headerValue.equals("Giờ bay")) {
                            gioDi = model.getValueAt(table.getSelectedRow(), i).toString();
                        } else if (headerValue.equals("Giờ đến")) {
                            gioDen = model.getValueAt(table.getSelectedRow(), i).toString();
                        } else if (headerValue.equals("Giá hạng phổ thông")) {
                            giaPT = model.getValueAt(table.getSelectedRow(), i).toString();
                        } else if (headerValue.equals("Giá hạng thương gia")) {
                            giaTG = model.getValueAt(table.getSelectedRow(), i).toString();
                        } else if (headerValue.equals("Mã chuyến bay")) {
                            machuyenbay = model.getValueAt(table.getSelectedRow(), i).toString();
                        }
                    }

                    try {
                        new frameChonHangGhe(noiDi,noiDen,gioDi,gioDen,giaPT,giaTG,time,table,check,check2C,lb_TenChuyen,machuyenbay,lb_CountChuyen);
                    } catch (InterruptedException ex ) {
                        Logger.getLogger(PanelChonChuyenBay.class.getName()).log(Level.SEVERE, null, ex);
                    }catch (ParseException ex ) {

                    }
                }

            }
        });

        pn_Content.add(pn_table, java.awt.BorderLayout.CENTER);

        add(pn_Content, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    public void init(){ 
    }     
    public void loadTable(TimChuyenBayDTO tcb) throws ParseException{
        noiDi = tcb.getNoidi();
        noiDen = tcb.getNoiden();
        ngayDi = tcb.getNgaydi();
        ngayVe = tcb.getNgayve();
        hangBaydi = tcb.getHangBaydi();
        hangBayve = tcb.getHangBayve();
        //ArrayList<ChuyenBayDTO> listChuyenBay;
        ArrayList<DuongBayDTO> listDuongBay;
        ArrayList<VeBayDTO> listVeBay;
        
        ArrayList<GiaChuyenBayDTO> listGia = GiaChuyenBayBUS.taoGia();
        ArrayList<String> tgd=new ArrayList<>();
        ArrayList<ChuyenBayDTO> list = new ArrayList<>();
        lb_TenChuyen.setText("Chọn chuyến bay "+noiDi+ " , Việt Nam - "+noiDen+", Việt Nam ");
        SimpleDateFormat inputDateFormat = new SimpleDateFormat("dd-MM-yyyy");
        SimpleDateFormat outputDateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Date date = inputDateFormat.parse(ngayDi);
        String outputDateStr = outputDateFormat.format(date);
        listChuyenBay = new ArrayList<>();
        if(!listChuyenBay.isEmpty()){
            listChuyenBay.clear();
        }
        int sum = tcb.getLonhon12() + tcb.getTu2den12();
        listChuyenBay = ChuyenBayBUS.loadCBtheoDB(noiDi, noiDen, outputDateStr, tgd,hangBaydi,sum);
        System.out.println(""+listChuyenBay.size());
        lb_CountChuyen.setText(listChuyenBay.size()+" kết quả");
        table.setBackground(Color.white);
        
        model = (DefaultTableModel) table.getModel();
        model.setColumnIdentifiers(new Object[]{
            "Mã chuyến bay","Hãng bay","Giờ bay", "Giờ đến", "Giá hạng phổ thông", "Giá hạng thương gia"
        });  
        int i=0;
            for(GiaChuyenBayDTO gia : listGia){
                if(gia.getDiemDi().equals(noiDi)&& gia.getDiemDe().equals(noiDen)){
                        for (ChuyenBayDTO z : listChuyenBay) {
                            ChuyenBayBUS cbbus = new ChuyenBayBUS();
                            System.out.println("Chuyen chỉu di"+z.getMaChuyenBay()+"Soluong Eco "+ z.getSLEco()+ "So luong Bus"+ z.getSLBus() /*+cbbus.checkSLEco(z.getMaChuyenBay()) +" So luong Bus  "+ChuyenBayBUS.checkSLBus(z.getMaChuyenBay())*/);
    //                        if(z.getSLEco()>sum && z.getSLBus()>sum){
                                model.addRow(new Object[]{
                                         z.getMaChuyenBay(),hangBaydi,z.getGioDelay(),tgd.get(i),gia.getGia(),(gia.getGia()*2)+""
                                    });
    //                        }


                            /*}*/
                            i++;        
                        }
                }
            }

//        check2C= check2C();
        if(tcb.getNgayve()!=null){
            check2C=true;
            MenuDatVe.khuhoi=1;
        }
        else{
            MenuDatVe.khuhoi=0;
        }
        
        check = false;
        listChuyenBay.clear();
//        listDuongBay.clear();
//        listVeBay.clear();
        list.clear();
    }
    public static void loadTable(TimChuyenBayDTO tcb, JTable jtable, JLabel jlabel, JLabel lb_CountChuyen) throws ParseException{
        noiDi = tcb.getNoiden();
        noiDen = tcb.getNoidi();
        ngayDi = tcb.getNgaydi();
        ngayVe = tcb.getNgayve();
        hangBaydi = tcb.getHangBaydi();
        hangBayve = tcb.getHangBayve();
        DefaultTableModel model;
        model = (DefaultTableModel) jtable.getModel();
        model.setRowCount(0);
        jtable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        if(!listChuyenBay.isEmpty()){
            listChuyenBay.clear();
        }
        //ArrayList<ChuyenBayDTO> listChuyenBay = new ArrayList<>();
        ArrayList<DuongBayDTO> listDuongBay;
        ArrayList<VeBayDTO> listVeBay;
        ArrayList<GiaChuyenBayDTO> listGia = GiaChuyenBayBUS.taoGia();
        ArrayList<ChuyenBayDTO> list = new ArrayList<>();
        
        jlabel.setText("Chọn chuyến bay"+ noiDi+ ", Việt Nam - " + noiDen+", Việt Nam");
        ArrayList<String> tgd=new ArrayList<>();
        SimpleDateFormat inputDateFormat = new SimpleDateFormat("dd-MM-yyyy");
        // Định dạng đầu ra
        SimpleDateFormat outputDateFormat = new SimpleDateFormat("yyyy-MM-dd");
            // Phân tích chuỗi thành đối tượng Date
            Date date = inputDateFormat.parse(ngayVe);
            
            // Định dạng lại ngày thành chuỗi theo định dạng "yyyy-MM-dd"
            String outputDateStr = outputDateFormat.format(date);
        if(!listChuyenBay.isEmpty()){
            listChuyenBay.clear();
        }
        int sum = tcb.getLonhon12() + tcb.getTu2den12();
        listChuyenBay = ChuyenBayBUS.loadCBtheoDB(noiDi, noiDen, outputDateStr, tgd,hangBayve,sum);
        lb_CountChuyen.setText(listChuyenBay.size()+" kết quả");
        jtable.setBackground(Color.white);
        model.setColumnIdentifiers(new Object[]{
           "Mã chuyến bay", "Hãng bay", "Giờ bay", "Giờ đến", "Giá hạng phổ thông", "Giá hạng thương gia"
        }); 
        int i=0;
        //int sum = tcb.getLonhon12() + tcb.getTu2den12();
        
            for(GiaChuyenBayDTO gia : listGia){
                if(gia.getDiemDi().equals(noiDi)&& gia.getDiemDe().equals(noiDen)){
                        for (ChuyenBayDTO z : listChuyenBay) {
                            ChuyenBayBUS cbbus = new ChuyenBayBUS();
                            //System.out.println(""+sum);
                            System.out.println("Chuyen chỉu ve"+z.getMaChuyenBay()+"Soluong Eco "+ z.getSLEco()+ "So luong Bus"+ z.getSLBus() /*+cbbus.checkSLEco(z.getMaChuyenBay()) +" So luong Bus  "+ChuyenBayBUS.checkSLBus(z.getMaChuyenBay())*/);
                            //if((cbbus.checkSLEco(z.getMaChuyenBay())>=sum) || (cbbus.checkSLBus(z.getMaChuyenBay())>=sum)){
                                 model.addRow(new Object[]{
                                          z.getMaChuyenBay(),hangBayve,z.getGioDelay(),tgd.get(i),gia.getGia(),(gia.getGia()*2)+""
                                });

                            /*}*/  i++;
                //            System.out.println(""+z.getMaChuyenBay());
                //            for(VeBayDTO h: listVeBay){
                //                System.out.println(""+z.getMaChuyenBay()+h.getMaVe());
                //                if (z.getMaChuyenBay().equals(h.getMaChuyenBay())) {


                ////                }
                //            }
                        }
                }
            }
        
//        JScrollPane scrollPane = new JScrollPane();
//        scrollPane.getViewport().add(jtable);
//        pn_table.add(scrollPane,BorderLayout.CENTER);
        check = true;
                    
        listChuyenBay.clear();
//        listDuongBay.clear();
//        listVeBay.clear();
        list.clear();
        //checkunVisible=true;
    }
//    public static String hangbay(String key){
//        String hang = "";
//        ArrayList<MayBayDTO> list = MayBayBUS.load();
//        for(MayBayDTO x : list){
//            if(x.getMaMayBay().equals(key)){
//                hang=x.getHangBay();
//            }
//        }
//        return hang;
//    }
//    public static boolean check2C(){
//        if(tcb.getNgayve()!=null){
//            return true;
//        }
//        return false;
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lb_Chon;
    private static javax.swing.JLabel lb_CountChuyen;
    private static javax.swing.JLabel lb_TenChuyen;
    private javax.swing.JPanel pn_Content;
    private javax.swing.JPanel pn_function;
    private javax.swing.JPanel pn_functionCenter;
    private javax.swing.JPanel pn_functionnull;
    private static javax.swing.JPanel pn_table;
    private javax.swing.JPanel pn_title;
    // End of variables declaration//GEN-END:variables
}
