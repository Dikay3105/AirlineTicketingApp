/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.datve;

import BUS.KhachHangBUS;
import BUS.NhanVienBUS;
import DTO.KhachHangDTO;
import DTO.TimChuyenBayDTO;
import GUI.aircraft;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import static GUI.datve.MenuDatVe.pn_View;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author ANH KHOA
 */
public class Panel_ThongTinKH extends javax.swing.JPanel {

    public static aircraft Aircraft;
    public String MaChuyenBayDi = MenuDatVe.ma1c;
    public String MaChuyenBayVe = MenuDatVe.ma2c;

    /**
     * Creates new form Panel_ThongTinKH
     */
    public Panel_ThongTinKH(TimChuyenBayDTO tcb) {
        initComponents();

        init(tcb);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnG_KhachHang = new javax.swing.ButtonGroup();
        pn_title = new javax.swing.JPanel();
        lb1 = new javax.swing.JLabel();
        jTextArea1 = new javax.swing.JTextArea();
        jcp_Kh = new javax.swing.JScrollPane();
        pn_Content = new javax.swing.JPanel();
        pn_BTN = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btn_tt = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1200, 550));
        setLayout(new java.awt.BorderLayout());

        pn_title.setBackground(new java.awt.Color(248, 255, 235));
        pn_title.setPreferredSize(new java.awt.Dimension(1000, 90));
        pn_title.setLayout(new java.awt.GridLayout(2, 1));

        lb1.setBackground(new java.awt.Color(248, 255, 235));
        lb1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lb1.setText("Thông tin Hành khách");
        lb1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 5, 0, 0, new java.awt.Color(248, 255, 235)));
        lb1.setPreferredSize(new java.awt.Dimension(256, 25));
        pn_title.add(lb1);

        jTextArea1.setBackground(new java.awt.Color(248, 255, 235));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("  Vui lòng sử dụng tiếng Việt không dấu và không sử dụng các ký tự đặc biệt. \n  Vui lòng nhập đầy đủ tên hành khách và những thông tin khác xuất hiện trên (các) giấy tờ tùy thân do chính phủ cấp của hành khách.");
        jTextArea1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 5, 0, new java.awt.Color(0, 204, 204)));
        pn_title.add(jTextArea1);

        add(pn_title, java.awt.BorderLayout.NORTH);

        jcp_Kh.setPreferredSize(new java.awt.Dimension(1002, 400));

        pn_Content.setBackground(new java.awt.Color(255, 255, 255));
        pn_Content.setPreferredSize(new java.awt.Dimension(1000, 550));

        javax.swing.GroupLayout pn_ContentLayout = new javax.swing.GroupLayout(pn_Content);
        pn_Content.setLayout(pn_ContentLayout);
        pn_ContentLayout.setHorizontalGroup(
            pn_ContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        pn_ContentLayout.setVerticalGroup(
            pn_ContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );

        jcp_Kh.setViewportView(pn_Content);

        add(jcp_Kh, java.awt.BorderLayout.CENTER);

        pn_BTN.setBackground(new java.awt.Color(255, 255, 255));
        pn_BTN.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 0, 0, 0, new java.awt.Color(0, 204, 204)));
        pn_BTN.setPreferredSize(new java.awt.Dimension(1012, 60));
        pn_BTN.setLayout(new java.awt.GridLayout(1, 0));
        pn_BTN.add(jLabel1);

        btn_tt.setBackground(new java.awt.Color(0, 245, 225));
        btn_tt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_tt.setForeground(new java.awt.Color(255, 255, 255));
        btn_tt.setText("TIẾP TỤC");
        btn_tt.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 20, 5, 20, new java.awt.Color(255, 255, 255)));
        btn_tt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ttActionPerformed(evt);
            }
        });
        pn_BTN.add(btn_tt);
        pn_BTN.add(jLabel2);

        add(pn_BTN, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ttActionPerformed
        boolean check = false;
        if (MenuDatVe.KHlList.size() != 0) {
            MenuDatVe.KHlList.clear();
        }
        int i = 0;
        for (Panel_ContentKh pnkh : panelList) {

            if (KhachHangBUS.loadKH(pnkh.checkKH()).size() != 0) {
                
                KhachHangDTO kh = KhachHangBUS.loadKH(pnkh.checkKH()).get(0);
                if (kh.getMaKH().equals(pnkh.checkKH())) {
                    KhachHangDTO kh1 = pnkh.add_KH(kh.getMaKH());
                    MenuDatVe.KHlList.add(kh1);
                    if(checkInput(pnkh.Type, kh1.getTenKH(), kh1.getNgaySinh(),kh1.getCccd(), kh1.getSdt(), kh1.getMail())){
                        check = true;
                        }
                        else{
                            check=false;
                            break;
                        }
                }

            } else {
                KhachHangDTO kh2 = pnkh.add_KH(count() + i);
                MenuDatVe.KHlList.add(kh2);
                i++;
                if(checkInput(pnkh.Type, kh2.getTenKH(), kh2.getNgaySinh(),kh2.getCccd(), kh2.getSdt(), kh2.getMail())){
                        check = true;
                        }
                        else{
                            check=false;
                            break;
                        }
            }

            

        }
        if (check == true) {
            try {
                if (MenuDatVe.khuhoi == 1) {
                    if (MenuDatVe.hangghe1C.equals("Bussiness")) {
                        if (MenuDatVe.hangghe2C.equals("Bussiness")) {
                            Aircraft = new aircraft(MaChuyenBayDi, MaChuyenBayVe, 1, "", 1, 1, 1);
                            Aircraft.setIndex(0, "Đi");
                            Aircraft.setIndex(0, "Về");
                        } else if (MenuDatVe.hangghe2C.equals("Economy")) {
                            Aircraft = new aircraft(MaChuyenBayDi, MaChuyenBayVe, 1, "", 1, 0, 1);
                            Aircraft.setIndex(0, "Đi");
                            Aircraft.setIndex(1, "Về");
                        }

                    } else {
                        if (MenuDatVe.hangghe2C.equals("Bussiness")) {
                            Aircraft = new aircraft(MaChuyenBayDi, MaChuyenBayVe, 1, "", 0, 1, 1);
                            Aircraft.setIndex(1, "Đi");
                            Aircraft.setIndex(0, "Về");
                        } else if (MenuDatVe.hangghe2C.equals("Economy")) {
                            Aircraft = new aircraft(MaChuyenBayDi, MaChuyenBayVe, 1, "", 0, 0, 1);
                            Aircraft.setIndex(1, "Đi");
                            Aircraft.setIndex(1, "Về");
                        }
                    }
                } else {
                    if (MenuDatVe.hangghe1C.equals("Bussiness")) {

                        Aircraft = new aircraft(MaChuyenBayDi, MaChuyenBayVe, 1, "", 1, 1, 0);
                        Aircraft.setIndex(0, "Đi");

                    } else {

                        Aircraft = new aircraft(MaChuyenBayDi, MaChuyenBayVe, 1, "", 0, 1, 0);
                        Aircraft.setIndex(1, "Đi");

                    }
                }

                pn_View.add(Aircraft, "page4");
                MenuDatVe.cardLayout.show(pn_View, "page4");
            } catch (SQLException ex) {
                Logger.getLogger(Panel_ThongTinKH.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(Panel_ThongTinKH.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_btn_ttActionPerformed
    public static ArrayList<Panel_ContentKh> panelList = new ArrayList<>();
    Panel_ContentKh panel;

    public void init(TimChuyenBayDTO tcb) {
        if (!panelList.isEmpty()) {
            panelList.clear();
        }
        int Lonhon12 = Integer.parseInt(tcb.getLonhon12() + "");
        int Tu2den12 = Integer.parseInt(tcb.getTu2den12() + "");
        //int Nhohon2 = Integer.parseInt(tcb.getNhohon2() + "");
        int count_Lonhon12 = 0;
        int count_Tu2den12 = 0;
        //int count_Nhohon2 = 0;
        //pn_ttkh.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.decode("#F8FFEB"),0), "Thông tin cơ bản", TitledBorder.CENTER, TitledBorder.TOP));
        int countSLKH;
        countSLKH = Integer.parseInt(tcb.getLonhon12() + "") + Integer.parseInt(tcb.getTu2den12() + "") /*+ Integer.parseInt(tcb.getNhohon2() + "")*/;
        for (int i = 1; i <= countSLKH; i++) {
            if (Lonhon12 >= 1) {
                count_Lonhon12 += 1;
                panel = new Panel_ContentKh("Lonhon12", count_Lonhon12);
                Lonhon12--;

            } else if (Lonhon12 == 0 && Tu2den12 >= 1) {
                count_Tu2den12 += 1;
                panel = new Panel_ContentKh("Tu2den12", count_Tu2den12);
                Tu2den12--;
            }
            /*else if (Lonhon12 == 0 && Tu2den12 == 0 && Nhohon2 >= 1) {
                count_Nhohon2 += 1;
                panel = new Panel_ContentKh("Nhohon2", count_Nhohon2);
                Nhohon2--;
            }*/
            panel.setName("pnKH_" + i);
            panelList.add(panel);
            if (i >= 2) {
                jcp_Kh.setPreferredSize(new Dimension(1000, 325 * i));
                pn_Content.setPreferredSize(new Dimension(1000, 325 * i));
            }
            pn_Content.setLayout(new GridLayout(i, 1));
            pn_Content.add(panel);
        }

    }

    public int count() {
        int count = KhachHangBUS.load().size() + 1;
        return count;
    }

    public boolean checkInput(String type, String namenv, String nsinh, String cccd, String sdt, String email) {
        if ("".equals(namenv)) {
            JOptionPane.showMessageDialog(null, "HÃY NHẬP ĐẦY ĐỦ HỌ TÊN", "Thông Báo", JOptionPane.OK_OPTION);
            return false;
        } else if (isSpecialCharacters(namenv) == true) {
            JOptionPane.showMessageDialog(null, "LƯU Ý: HỌ TÊN KHÔNG ĐƯỢC CÓ KÍ TỰ ĐẶC BIỆT", "Thông Báo", JOptionPane.OK_OPTION);
            return false;
        }
        if (type.equals("Lonhon12")) {
            Calendar calendar = Calendar.getInstance();
            int currentYear = calendar.get(Calendar.YEAR);
            String firstFourChars = nsinh.substring(0, 4);
            if (!isDateValid(nsinh) && (currentYear - Integer.parseInt(firstFourChars)) <= 12) {
                JOptionPane.showMessageDialog(null, "HÃY NHẬP ĐÚNG ĐỊNH DẠNG dd-MM-yyyy VÀ TUỔI PHẢI LỚN HƠN 12", "Thông Báo", JOptionPane.OK_OPTION);
                return false;
            } else if ((currentYear - Integer.parseInt(firstFourChars)) >= 15 && cccd.isBlank()) {
                JOptionPane.showMessageDialog(null, "Không được để trống số CCCD", "Thông báo", JOptionPane.OK_OPTION);
                return false;
            }else if ((currentYear - Integer.parseInt(firstFourChars)) >= 15 && cccd.length() != 12) {
                JOptionPane.showMessageDialog(null, "CCCD phải đủ 12 chữ số", "Thông báo", JOptionPane.OK_OPTION);
                return false;
            }else if ((currentYear - Integer.parseInt(firstFourChars)) >= 15 && !cccd.matches("\\d+")) {
                JOptionPane.showMessageDialog(null, "CCCD chỉ được chứa chữ số", "Thông báo", JOptionPane.OK_OPTION);
                return false;
            }
            
            if (!sdt.isBlank()) {
                if(!sdt.matches("\\d+")) {
                    JOptionPane.showMessageDialog(null, "LƯU Ý: SỐ ĐIỆN THOẠI CHỈ CHỨA KÍ TỰ SỐ", "Thông Báo", JOptionPane.OK_OPTION);
                    return false;
                }
                if(sdt.trim().length()!=10) {
                    JOptionPane.showMessageDialog(null, "LƯU Ý: SỐ ĐIỆN THOẠI PHẢI CHỨA 10 SỐ", "Thông Báo", JOptionPane.OK_OPTION);
                    return false;
                }
                if(!sdt.substring(0, 1).equals("0")) {
                    JOptionPane.showMessageDialog(null, "LƯU Ý: SỐ ĐIỆN THOẠI PHẢI BẮT ĐẦU BẰNG SỐ 0", "Thông Báo", JOptionPane.OK_OPTION);
                    return false;
                }
            } 
            
            if (!email.isBlank()) {
                if(isValidEmail(email)) {
                    JOptionPane.showMessageDialog(null, "LƯU Ý: HÃY NHẬP ĐÚNG ĐỊNH DẠNG EMAIL", "Thông Báo", JOptionPane.OK_OPTION);
                    return false;
                }
            }

        } else {
            Calendar calendar = Calendar.getInstance();
            int currentYear = calendar.get(Calendar.YEAR);
            String firstFourChars = nsinh.substring(0, 4);
            if (!isDateValid(nsinh) && (((currentYear - Integer.parseInt(firstFourChars)) < 2) || ((currentYear - Integer.parseInt(firstFourChars)) > 12))) {
                JOptionPane.showMessageDialog(null, "HÃY NHẬP ĐÚNG ĐỊNH DẠNG dd-MM-yyyy VÀ TUỔI PHẢI TỪ 2 ĐẾN 12", "Thông Báo", JOptionPane.OK_OPTION);
                return false;
            }
        }

        return true;
    }

    public boolean isNumber(int num) {
        return num > 0 && Integer.toString(num) != null && Integer.toString(num).matches("[-+]?\\d*\\.?\\d+");
    }

    public static boolean isDateValid(String dateStr) {
        String dateFormat = "dd-MM-yyyy";
        SimpleDateFormat sdf = new SimpleDateFormat(dateFormat);
        sdf.setLenient(false); // Tắt tính linh hoạt để kiểm tra chính xác ngày tháng

        try {
            Date date = sdf.parse(dateStr);
            // Nếu ngày tháng được phân tích thành công, thì chuỗi đúng định dạng
            return true;
        } catch (ParseException e) {
            // Nếu có lỗi ParseException, chuỗi không đúng định dạng
            return false;
        }
    }

    public boolean isWord(String sData) {
        for (int i = 0; i < sData.length(); i++) {
            if (Character.isLetter(sData.charAt(i))) {
                return true;
            }
        }
        return false;
    }

    public static boolean isValidEmail(String email) {
        // regex pattern for email validation
        String regex = "^[\\w\\.-]+@([\\w\\-]+\\.)+[A-Z]{2,4}$";
        Pattern pattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);
        Matcher matcher = pattern.matcher(email.substring(0, email.length()-10));
        return matcher.matches() && email.substring(email.length()-10).equals("@gmail.com");
    }

    public boolean isSpecialCharacters(String name) {
        String specialCharacters = "!#$%&'()*+,-./:;<=>?@[]^_`{|}~";
        String str2[] = name.split("");
        int count = 0;
        for (int i = 0; i < str2.length; i++) {
            if (specialCharacters.contains(str2[i])) {
                count++;
            }
        }
        if (name != null && count == 0) {
            return false;
        } else {
            return true;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnG_KhachHang;
    private javax.swing.JButton btn_tt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JScrollPane jcp_Kh;
    private javax.swing.JLabel lb1;
    private javax.swing.JPanel pn_BTN;
    private javax.swing.JPanel pn_Content;
    private javax.swing.JPanel pn_title;
    // End of variables declaration//GEN-END:variables
}
